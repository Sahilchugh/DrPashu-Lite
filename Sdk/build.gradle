plugins {
    id 'maven-publish'
    id 'com.android.library'
//    id 'com.google.gms.google-services'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }
}

task androidJavadocs(type: Javadoc){
    source = android.sourceSets.main.java.srcDirs

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all{ variant->
        if (variant.name == 'release'){
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    // excluding a specific class from being documented
    exclude '**/NameOfClassToExclude.java'

    title = null

//    options{
//        doclet = "com.google.doclava.Doclava"
//        docletpath = [file("libs/doclava-1.0.6.jar")]
//        noTimestamp = false
//
//        // show only Protected & Public
//        memberLevel = JavadocMemberLevel.PROTECTED
//    }

}

//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs){
//    archiveClassifier.set('javadoc')
//    from androidJavadocs.destinationDir
//}
//
//
//task androidSourcesJar(type: Jar){
//    archiveClassifier.set('sources')
//    from android.sourceSets.main.java.srcDirs
//}
/*
afterEvaluate {

    android.libraryVariants.each{ varient ->
        publishing.publications(varient.name, MavenPublication){
            from components.findMyName(varient.name)

            groupId = "com.drpashu.app"
            artifactId = "sdk"
            version = "1.0"
        }
    }*/

afterEvaluate {
    publishing{
        publications{
            release(MavenPublication){
                groupId = "com.drpashu.app"
                artifactId = "sdk"
                version = "1.0"
                // Applies the component for the release build variant
                from components.release
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    //Agora Audio-Video Call Library
    implementation 'io.agora.rtc:full-rtc-basic:3.6.2'

    //Retrofit Rest Api Library
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // lottie integration
    implementation "com.airbnb.android:lottie:5.1.1"

    //Razorpay Payment Gateway
    implementation 'com.razorpay:checkout:1.6.26'

    //Imageview zoom Library
    implementation 'com.github.MikeOrtiz:TouchImageView:1.4.1'
}